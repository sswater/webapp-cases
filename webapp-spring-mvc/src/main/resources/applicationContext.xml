<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/context  
                      http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                      http://code.alibabatech.com/schema/dubbo 
                      http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

  <!-- place holder -->
  <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <beans:property name="location" value="classpath:config.properties" />
  </beans:bean>

  <!-- autowired -->
  <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  

  <!-- *********************************
    bean scan is not allowed by Jar2Exe. 
    instead, beans need to be declared explicitly, one by one
  ********************************* -->
  <!-- <context:component-scan base-package="com.playcoding.webapp.service" /> -->
  <bean class="com.playcoding.webapp.service.TestDemoService" />

  <!-- connection pool -->
  <beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
    <beans:property name="driverClassName" value="${datasource.driverClassName}" />
    <beans:property name="url" value="${datasource.url}" />
    <beans:property name="username" value="${datasource.username}" />
    <beans:property name="password" value="${datasource.password}" />
    <beans:property name="minIdle" value="${datasource.minIdle}" />
    <beans:property name="validationQuery" value="select 1" />
    <beans:property name="minEvictableIdleTimeMillis" value="300000" />
  </beans:bean>

  <!-- batis -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis-config.xml" />
    <property name="dataSource" ref="dataSource" />
    
    <!-- *********************************
      resource scan is not allowed by Jar2Exe.
      instead, mapper xml need to be declared explicitly, one by one
    ********************************* -->
    <!-- <property name="mapperLocations" value="classpath*:mapper/*.xml" /> -->
    <property name="mapperLocations">
      <list>
        <value>classpath*:mapper/TestDemoDao.xml</value>
      </list>
    </property>
    
  </bean>

  <!-- *********************************
    bean scan is not allowed by Jar2Exe.
  ********************************* -->
  <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.playcoding.webapp.dao" />
  </bean> -->
  
  <!-- *********************************
    instead, mapper interface need to be declared explicitly, one by one
  ********************************* -->
  <bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true" lazy-init="true">
    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
  </bean>
  <bean id="testDemoDao" parent="baseMapper">
    <property name="mapperInterface" value="com.playcoding.webapp.dao.TestDemoDao" />
  </bean>

</beans>
